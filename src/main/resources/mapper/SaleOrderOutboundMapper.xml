<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lirins.cn.mapper.SaleOrderOutboundMapper">
  <resultMap id="BaseResultMap" type="com.lirins.cn.entity.SaleOrderOutbound">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="receive_id" jdbcType="BIGINT" property="receiveId" />
    <result column="service_note" jdbcType="VARCHAR" property="serviceNote" />
    <result column="process_time" jdbcType="TIMESTAMP" property="processTime" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
    <result column="is_return" jdbcType="BIT" property="isReturn" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, receive_id, service_note, process_time, supplier_id, is_return, add_time, creator_id, 
    update_time, update_id
  </sql>
  <select id="selectByExample" parameterType="com.lirins.cn.entity.SaleOrderOutboundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sale_order_outbound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sale_order_outbound
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_sale_order_outbound
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lirins.cn.entity.SaleOrderOutboundExample">
    delete from t_sale_order_outbound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lirins.cn.entity.SaleOrderOutbound">
    insert into t_sale_order_outbound (id, receive_id, service_note, 
      process_time, supplier_id, is_return, 
      add_time, creator_id, update_time, 
      update_id)
    values (#{id,jdbcType=BIGINT}, #{receiveId,jdbcType=BIGINT}, #{serviceNote,jdbcType=VARCHAR}, 
      #{processTime,jdbcType=TIMESTAMP}, #{supplierId,jdbcType=BIGINT}, #{isReturn,jdbcType=BIT}, 
      #{addTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lirins.cn.entity.SaleOrderOutbound">
    insert into t_sale_order_outbound
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="serviceNote != null">
        service_note,
      </if>
      <if test="processTime != null">
        process_time,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="isReturn != null">
        is_return,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=BIGINT},
      </if>
      <if test="serviceNote != null">
        #{serviceNote,jdbcType=VARCHAR},
      </if>
      <if test="processTime != null">
        #{processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="isReturn != null">
        #{isReturn,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lirins.cn.entity.SaleOrderOutboundExample" resultType="java.lang.Long">
    select count(*) from t_sale_order_outbound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sale_order_outbound
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=BIGINT},
      </if>
      <if test="record.serviceNote != null">
        service_note = #{record.serviceNote,jdbcType=VARCHAR},
      </if>
      <if test="record.processTime != null">
        process_time = #{record.processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.isReturn != null">
        is_return = #{record.isReturn,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sale_order_outbound
    set id = #{record.id,jdbcType=BIGINT},
      receive_id = #{record.receiveId,jdbcType=BIGINT},
      service_note = #{record.serviceNote,jdbcType=VARCHAR},
      process_time = #{record.processTime,jdbcType=TIMESTAMP},
      supplier_id = #{record.supplierId,jdbcType=BIGINT},
      is_return = #{record.isReturn,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lirins.cn.entity.SaleOrderOutbound">
    update t_sale_order_outbound
    <set>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=BIGINT},
      </if>
      <if test="serviceNote != null">
        service_note = #{serviceNote,jdbcType=VARCHAR},
      </if>
      <if test="processTime != null">
        process_time = #{processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="isReturn != null">
        is_return = #{isReturn,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lirins.cn.entity.SaleOrderOutbound">
    update t_sale_order_outbound
    set receive_id = #{receiveId,jdbcType=BIGINT},
      service_note = #{serviceNote,jdbcType=VARCHAR},
      process_time = #{processTime,jdbcType=TIMESTAMP},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      is_return = #{isReturn,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>