<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lirins.cn.mapper.SaleOrderReturnMapper">
  <resultMap id="BaseResultMap" type="com.lirins.cn.entity.SaleOrderReturn">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="outbound_id" jdbcType="BIGINT" property="outboundId" />
    <result column="apply_id" jdbcType="BIGINT" property="applyId" />
    <result column="good_type" jdbcType="VARCHAR" property="goodType" />
    <result column="good_number" jdbcType="BIGINT" property="goodNumber" />
    <result column="entry_time" jdbcType="TIMESTAMP" property="entryTime" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, outbound_id, apply_id, good_type, good_number, entry_time, add_time, creator_id, 
    update_time, update_id
  </sql>
  <select id="selectByExample" parameterType="com.lirins.cn.entity.SaleOrderReturnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sale_order_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sale_order_return
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_sale_order_return
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lirins.cn.entity.SaleOrderReturnExample">
    delete from t_sale_order_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lirins.cn.entity.SaleOrderReturn">
    insert into t_sale_order_return (id, outbound_id, apply_id, 
      good_type, good_number, entry_time, 
      add_time, creator_id, update_time, 
      update_id)
    values (#{id,jdbcType=BIGINT}, #{outboundId,jdbcType=BIGINT}, #{applyId,jdbcType=BIGINT}, 
      #{goodType,jdbcType=VARCHAR}, #{goodNumber,jdbcType=BIGINT}, #{entryTime,jdbcType=TIMESTAMP}, 
      #{addTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lirins.cn.entity.SaleOrderReturn">
    insert into t_sale_order_return
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="outboundId != null">
        outbound_id,
      </if>
      <if test="applyId != null">
        apply_id,
      </if>
      <if test="goodType != null">
        good_type,
      </if>
      <if test="goodNumber != null">
        good_number,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="outboundId != null">
        #{outboundId,jdbcType=BIGINT},
      </if>
      <if test="applyId != null">
        #{applyId,jdbcType=BIGINT},
      </if>
      <if test="goodType != null">
        #{goodType,jdbcType=VARCHAR},
      </if>
      <if test="goodNumber != null">
        #{goodNumber,jdbcType=BIGINT},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lirins.cn.entity.SaleOrderReturnExample" resultType="java.lang.Long">
    select count(*) from t_sale_order_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sale_order_return
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.outboundId != null">
        outbound_id = #{record.outboundId,jdbcType=BIGINT},
      </if>
      <if test="record.applyId != null">
        apply_id = #{record.applyId,jdbcType=BIGINT},
      </if>
      <if test="record.goodType != null">
        good_type = #{record.goodType,jdbcType=VARCHAR},
      </if>
      <if test="record.goodNumber != null">
        good_number = #{record.goodNumber,jdbcType=BIGINT},
      </if>
      <if test="record.entryTime != null">
        entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sale_order_return
    set id = #{record.id,jdbcType=BIGINT},
      outbound_id = #{record.outboundId,jdbcType=BIGINT},
      apply_id = #{record.applyId,jdbcType=BIGINT},
      good_type = #{record.goodType,jdbcType=VARCHAR},
      good_number = #{record.goodNumber,jdbcType=BIGINT},
      entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      creator_id = #{record.creatorId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lirins.cn.entity.SaleOrderReturn">
    update t_sale_order_return
    <set>
      <if test="outboundId != null">
        outbound_id = #{outboundId,jdbcType=BIGINT},
      </if>
      <if test="applyId != null">
        apply_id = #{applyId,jdbcType=BIGINT},
      </if>
      <if test="goodType != null">
        good_type = #{goodType,jdbcType=VARCHAR},
      </if>
      <if test="goodNumber != null">
        good_number = #{goodNumber,jdbcType=BIGINT},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lirins.cn.entity.SaleOrderReturn">
    update t_sale_order_return
    set outbound_id = #{outboundId,jdbcType=BIGINT},
      apply_id = #{applyId,jdbcType=BIGINT},
      good_type = #{goodType,jdbcType=VARCHAR},
      good_number = #{goodNumber,jdbcType=BIGINT},
      entry_time = #{entryTime,jdbcType=TIMESTAMP},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>