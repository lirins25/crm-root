<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lirins.cn.mapper.GoodToGiftMapper">
  <resultMap id="BaseResultMap" type="com.lirins.cn.entity.GoodToGift">
    <id column="good_to_gift_id" jdbcType="BIGINT" property="goodToGiftId" />
    <result column="good_id" jdbcType="BIGINT" property="goodId" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="brand_id" jdbcType="VARCHAR" property="brandId" />
    <result column="good_price" jdbcType="DOUBLE" property="goodPrice" />
    <result column="good_cost" jdbcType="DOUBLE" property="goodCost" />
    <result column="good_to_gift_number" jdbcType="BIGINT" property="goodToGiftNumber" />
    <result column="auditor" jdbcType="VARCHAR" property="auditor" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="audit_idea" jdbcType="VARCHAR" property="auditIdea" />
    <result column="audit_state" jdbcType="VARCHAR" property="auditState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    good_to_gift_id, good_id, good_name, category_id, brand_id, good_price, good_cost, 
    good_to_gift_number, auditor, audit_time, audit_idea, audit_state
  </sql>
  <select id="selectByExample" parameterType="com.lirins.cn.entity.GoodToGiftExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_good_to_gift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_good_to_gift
    where good_to_gift_id = #{goodToGiftId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_good_to_gift
    where good_to_gift_id = #{goodToGiftId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lirins.cn.entity.GoodToGiftExample">
    delete from t_good_to_gift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lirins.cn.entity.GoodToGift">
    insert into t_good_to_gift (good_to_gift_id, good_id, good_name, 
      category_id, brand_id, good_price, 
      good_cost, good_to_gift_number, auditor, 
      audit_time, audit_idea, audit_state
      )
    values (#{goodToGiftId,jdbcType=BIGINT}, #{goodId,jdbcType=BIGINT}, #{goodName,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=BIGINT}, #{brandId,jdbcType=VARCHAR}, #{goodPrice,jdbcType=DOUBLE}, 
      #{goodCost,jdbcType=DOUBLE}, #{goodToGiftNumber,jdbcType=BIGINT}, #{auditor,jdbcType=VARCHAR}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{auditIdea,jdbcType=VARCHAR}, #{auditState,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lirins.cn.entity.GoodToGift">
    insert into t_good_to_gift
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodToGiftId != null">
        good_to_gift_id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="goodPrice != null">
        good_price,
      </if>
      <if test="goodCost != null">
        good_cost,
      </if>
      <if test="goodToGiftNumber != null">
        good_to_gift_number,
      </if>
      <if test="auditor != null">
        auditor,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="auditIdea != null">
        audit_idea,
      </if>
      <if test="auditState != null">
        audit_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodToGiftId != null">
        #{goodToGiftId,jdbcType=BIGINT},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=BIGINT},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="goodPrice != null">
        #{goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodCost != null">
        #{goodCost,jdbcType=DOUBLE},
      </if>
      <if test="goodToGiftNumber != null">
        #{goodToGiftNumber,jdbcType=BIGINT},
      </if>
      <if test="auditor != null">
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditIdea != null">
        #{auditIdea,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null">
        #{auditState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lirins.cn.entity.GoodToGiftExample" resultType="java.lang.Long">
    select count(*) from t_good_to_gift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_good_to_gift
    <set>
      <if test="record.goodToGiftId != null">
        good_to_gift_id = #{record.goodToGiftId,jdbcType=BIGINT},
      </if>
      <if test="record.goodId != null">
        good_id = #{record.goodId,jdbcType=BIGINT},
      </if>
      <if test="record.goodName != null">
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=BIGINT},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodPrice != null">
        good_price = #{record.goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodCost != null">
        good_cost = #{record.goodCost,jdbcType=DOUBLE},
      </if>
      <if test="record.goodToGiftNumber != null">
        good_to_gift_number = #{record.goodToGiftNumber,jdbcType=BIGINT},
      </if>
      <if test="record.auditor != null">
        auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditIdea != null">
        audit_idea = #{record.auditIdea,jdbcType=VARCHAR},
      </if>
      <if test="record.auditState != null">
        audit_state = #{record.auditState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_good_to_gift
    set good_to_gift_id = #{record.goodToGiftId,jdbcType=BIGINT},
      good_id = #{record.goodId,jdbcType=BIGINT},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=BIGINT},
      brand_id = #{record.brandId,jdbcType=VARCHAR},
      good_price = #{record.goodPrice,jdbcType=DOUBLE},
      good_cost = #{record.goodCost,jdbcType=DOUBLE},
      good_to_gift_number = #{record.goodToGiftNumber,jdbcType=BIGINT},
      auditor = #{record.auditor,jdbcType=VARCHAR},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      audit_idea = #{record.auditIdea,jdbcType=VARCHAR},
      audit_state = #{record.auditState,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lirins.cn.entity.GoodToGift">
    update t_good_to_gift
    <set>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=BIGINT},
      </if>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="goodPrice != null">
        good_price = #{goodPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodCost != null">
        good_cost = #{goodCost,jdbcType=DOUBLE},
      </if>
      <if test="goodToGiftNumber != null">
        good_to_gift_number = #{goodToGiftNumber,jdbcType=BIGINT},
      </if>
      <if test="auditor != null">
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditIdea != null">
        audit_idea = #{auditIdea,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null">
        audit_state = #{auditState,jdbcType=VARCHAR},
      </if>
    </set>
    where good_to_gift_id = #{goodToGiftId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lirins.cn.entity.GoodToGift">
    update t_good_to_gift
    set good_id = #{goodId,jdbcType=BIGINT},
      good_name = #{goodName,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=BIGINT},
      brand_id = #{brandId,jdbcType=VARCHAR},
      good_price = #{goodPrice,jdbcType=DOUBLE},
      good_cost = #{goodCost,jdbcType=DOUBLE},
      good_to_gift_number = #{goodToGiftNumber,jdbcType=BIGINT},
      auditor = #{auditor,jdbcType=VARCHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_idea = #{auditIdea,jdbcType=VARCHAR},
      audit_state = #{auditState,jdbcType=VARCHAR}
    where good_to_gift_id = #{goodToGiftId,jdbcType=BIGINT}
  </update>
</mapper>